services:
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    # command: ["tail", "-f", "/dev/null"]
    command: ["go", "run", "."]
    environment:
      - ENV=development
    env_file:
      - .env
    restart: on-failure:5
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080/status"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 10s
    develop:
      watch:
        - action: rebuild
          path: go.mod
        - action: sync+restart
          path: ./api
          ignore: requests/
          target: /app
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
